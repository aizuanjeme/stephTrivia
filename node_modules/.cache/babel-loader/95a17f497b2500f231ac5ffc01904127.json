{"ast":null,"code":"var _jsxFileName = \"C:\\\\development\\\\personal\\\\trivia\\\\frontend\\\\src\\\\components\\\\Question.js\";\nimport React, { Component } from 'react';\nimport '../stylesheets/Question.css'; // const starArray = [5, 4, 3, 2, 1]\n\nclass Question extends Component {\n  constructor() {\n    super();\n    this.state = {\n      visibleAnswer: false\n    };\n  } // createStars() {\n  //   let { id, rating } = this.props;\n  //   return (\n  //     <div className=\"rating\">\n  //       {starArray.map(num => (\n  //         <button\n  //           type=\"button\"\n  //           key={num}\n  //           name='rating'\n  //           className={`star ${rating >= num ? \"active\" : \"off\"}`}\n  //           onClick={() => { this.props.changeRating(id, num) }}\n  //         >\n  //           <span className=\"star\">&#9733;</span>\n  //         </button>\n  //       ))}\n  //     </div>\n  //   )\n  // }\n\n\n  flipVisibility() {\n    this.setState({\n      visibleAnswer: !this.state.visibleAnswer\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          question = _this$props.question,\n          answer = _this$props.answer,\n          category = _this$props.category,\n          difficulty = _this$props.difficulty,\n          rating = _this$props.rating,\n          id = _this$props.id;\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"Question-holder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, question), React.createElement(\"div\", {\n      className: \"Question-status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"category\",\n      alt: \"\".concat(category.toLowerCase()),\n      src: \"\".concat(category.toLowerCase(), \".svg\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"difficulty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Difficulty: \", difficulty), React.createElement(\"img\", {\n      src: \"delete.png\",\n      alt: \"delete\",\n      className: \"delete\",\n      onClick: () => this.props.questionAction('DELETE'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"rating\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, [...Array(5)].map((star, index) => {\n      index += 1;\n      return React.createElement(\"button\", {\n        type: \"button\",\n        key: index,\n        name: \"rating\",\n        className: index <= rating ? \"on\" : \"off\",\n        onClick: () => this.props.changeRating(this.props.id, index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"star\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"\\u2605\"));\n    })), React.createElement(\"div\", {\n      className: \"show-answer button\",\n      onClick: () => this.flipVisibility(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.state.visibleAnswer ? 'Hide' : 'Show', \" Answer\"), React.createElement(\"div\", {\n      className: \"answer-holder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        visibility: this.state.visibleAnswer ? 'visible' : 'hidden'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Answer: \", answer)), question.length === 0 && React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"No Question\")));\n  }\n\n}\n\nexport default Question;","map":{"version":3,"sources":["C:\\development\\personal\\trivia\\frontend\\src\\components\\Question.js"],"names":["React","Component","Question","constructor","state","visibleAnswer","flipVisibility","setState","render","props","question","answer","category","difficulty","rating","id","toLowerCase","questionAction","Array","map","star","index","changeRating","visibility","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../stylesheets/Question.css';\n\n// const starArray = [5, 4, 3, 2, 1]\n\nclass Question extends Component {\n  constructor() {\n    super();\n    this.state = {\n      visibleAnswer: false,\n    };\n  }\n\n  // createStars() {\n  //   let { id, rating } = this.props;\n\n  //   return (\n  //     <div className=\"rating\">\n  //       {starArray.map(num => (\n  //         <button\n  //           type=\"button\"\n  //           key={num}\n  //           name='rating'\n  //           className={`star ${rating >= num ? \"active\" : \"off\"}`}\n  //           onClick={() => { this.props.changeRating(id, num) }}\n  //         >\n  //           <span className=\"star\">&#9733;</span>\n  //         </button>\n  //       ))}\n  //     </div>\n  //   )\n  // }\n\n  flipVisibility() {\n    this.setState({ visibleAnswer: !this.state.visibleAnswer });\n  }\n\n  render() {\n    const { question, answer, category, difficulty, rating, id } = this.props;\n    return (\n      <>\n        <div className='Question-holder'>\n          <div className='Question'>{question}</div>\n          <div className='Question-status'>\n            <img\n              className='category'\n              alt={`${category.toLowerCase()}`}\n              src={`${category.toLowerCase()}.svg`}\n            />\n            <div className='difficulty'>Difficulty: {difficulty}</div>\n            <img\n              src='delete.png'\n              alt='delete'\n              className='delete'\n              onClick={() => this.props.questionAction('DELETE')}\n            />\n          </div>\n          {/* {this.createStars()} */}\n          <div className=\"rating\">\n            {[...Array(5)].map((star, index) => {\n              index += 1;\n              return (\n                <button\n                  type=\"button\"\n                  key={index}\n                  name='rating'\n                  className={index <= rating ? \"on\" : \"off\"}\n                  onClick={() => this.props.changeRating(this.props.id, index)}\n                >\n                  <span className=\"star\">&#9733;</span>\n                </button>\n              );\n            })}\n          </div>\n          <div\n            className='show-answer button'\n            onClick={() => this.flipVisibility()}\n          >\n            {this.state.visibleAnswer ? 'Hide' : 'Show'} Answer\n          </div>\n          <div className='answer-holder'>\n            <span\n              style={{\n                visibility: this.state.visibleAnswer ? 'visible' : 'hidden',\n              }}\n            >\n              Answer: {answer}\n            </span>\n          </div>\n          {question.length === 0 && <h5>No Question</h5>}\n\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Question;\n"]},"metadata":{},"sourceType":"module"}