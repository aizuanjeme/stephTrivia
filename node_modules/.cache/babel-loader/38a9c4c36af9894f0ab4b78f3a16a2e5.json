{"ast":null,"code":"var _jsxFileName = \"C:\\\\development\\\\personal\\\\trivia\\\\frontend\\\\src\\\\components\\\\Question.js\";\nimport React, { Component } from 'react';\nimport '../stylesheets/Question.css';\nconst starArray = [5, 4, 3, 2, 1];\n\nclass Question extends Component {\n  constructor() {\n    super();\n    this.state = {\n      visibleAnswer: false\n    };\n  }\n\n  createStars() {\n    let _this$props = this.props,\n        id = _this$props.id,\n        rating = _this$props.rating;\n    return React.createElement(\"div\", {\n      className: \"rating\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, starArray.map(num => React.createElement(\"div\", {\n      key: num,\n      onClick: () => {\n        this.props.changeRating(this.props.id, num);\n      },\n      className: \"star \".concat(rating >= num ? 'active' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    })));\n  }\n\n  flipVisibility() {\n    this.setState({\n      visibleAnswer: !this.state.visibleAnswer\n    });\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          question = _this$props2.question,\n          answer = _this$props2.answer,\n          category = _this$props2.category,\n          difficulty = _this$props2.difficulty;\n    return React.createElement(\"div\", {\n      className: \"Question-holder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, question), React.createElement(\"div\", {\n      className: \"Question-status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"category\",\n      alt: \"\".concat(category.toLowerCase()),\n      src: \"\".concat(category.toLowerCase(), \".svg\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"difficulty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Difficulty: \", difficulty), React.createElement(\"img\", {\n      src: \"delete.png\",\n      alt: \"delete\",\n      className: \"delete\",\n      onClick: () => this.props.questionAction('DELETE'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), this.createStars(), React.createElement(\"div\", {\n      className: \"show-answer button\",\n      onClick: () => this.flipVisibility(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.state.visibleAnswer ? 'Hide' : 'Show', \" Answer\"), React.createElement(\"div\", {\n      className: \"answer-holder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        visibility: this.state.visibleAnswer ? 'visible' : 'hidden'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Answer: \", answer)));\n  }\n\n}\n\nexport default Question;","map":{"version":3,"sources":["C:\\development\\personal\\trivia\\frontend\\src\\components\\Question.js"],"names":["React","Component","starArray","Question","constructor","state","visibleAnswer","createStars","props","id","rating","map","num","changeRating","flipVisibility","setState","render","question","answer","category","difficulty","toLowerCase","questionAction","visibility"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../stylesheets/Question.css';\n\nconst starArray = [5,4,3,2,1]\n\nclass Question extends Component {\n  constructor() {\n    super();\n    this.state = {\n      visibleAnswer: false,\n    };\n  }\n\n  createStars(){\n    let {id, rating} = this.props;\n\n    return ( \n      <div className=\"rating\">\n        {starArray.map(num => (\n          <div\n            key={num}\n            onClick={() => {this.props.changeRating(this.props.id, num)}}\n            className={`star ${rating >= num ? 'active':''}`}\n          />\n        ))}\n      </div>\n    )\n  }\n\n  flipVisibility() {\n    this.setState({ visibleAnswer: !this.state.visibleAnswer });\n  }\n\n  render() {\n    const { question, answer, category, difficulty } = this.props;\n    return (\n      <div className='Question-holder'>\n        <div className='Question'>{question}</div>\n        <div className='Question-status'>\n          <img\n            className='category'\n            alt={`${category.toLowerCase()}`}\n            src={`${category.toLowerCase()}.svg`}\n          />\n          <div className='difficulty'>Difficulty: {difficulty}</div>\n          <img\n            src='delete.png'\n            alt='delete'\n            className='delete'\n            onClick={() => this.props.questionAction('DELETE')}\n          />\n        </div>\n        {this.createStars()}\n        <div\n          className='show-answer button'\n          onClick={() => this.flipVisibility()}\n        >\n          {this.state.visibleAnswer ? 'Hide' : 'Show'} Answer\n        </div>\n        <div className='answer-holder'>\n          <span\n            style={{\n              visibility: this.state.visibleAnswer ? 'visible' : 'hidden',\n            }}\n          >\n            Answer: {answer}\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Question;\n"]},"metadata":{},"sourceType":"module"}