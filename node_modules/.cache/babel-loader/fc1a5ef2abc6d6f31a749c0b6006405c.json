{"ast":null,"code":"var _jsxFileName = \"C:\\\\development\\\\personal\\\\trivia\\\\frontend\\\\src\\\\components\\\\Question.js\";\nimport React, { Component } from 'react';\nimport '../stylesheets/Question.css';\nconst starArray = [5, 4, 3, 2, 1];\n\nclass Question extends Component {\n  constructor() {\n    super();\n    this.state = {\n      visibleAnswer: false\n    };\n  }\n\n  createStars() {\n    let _this$props = this.props,\n        id = _this$props.id,\n        rating = _this$props.rating;\n    return React.createElement(\"div\", {\n      className: \"rating\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, starArray.map(num => React.createElement(\"button\", {\n      type: \"button\",\n      key: num,\n      name: \"rating\",\n      className: \"star \".concat(rating >= num ? \"active\" : \"off\"),\n      onClick: () => {\n        this.props.changeRating(id, num);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"star\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"\\u2605\"))));\n  }\n\n  flipVisibility() {\n    this.setState({\n      visibleAnswer: !this.state.visibleAnswer\n    });\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          question = _this$props2.question,\n          answer = _this$props2.answer,\n          category = _this$props2.category,\n          difficulty = _this$props2.difficulty,\n          rating = _this$props2.rating,\n          id = _this$props2.id;\n    return React.createElement(\"div\", {\n      className: \"Question-holder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, question), React.createElement(\"div\", {\n      className: \"Question-status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"category\",\n      alt: \"\".concat(category.toLowerCase()),\n      src: \"\".concat(category.toLowerCase(), \".svg\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"difficulty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Difficulty: \", difficulty), React.createElement(\"img\", {\n      src: \"delete.png\",\n      alt: \"delete\",\n      className: \"delete\",\n      onClick: () => this.props.questionAction('DELETE'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"rating\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, [...Array(5)].map((star, index) => {\n      index += 1;\n      return React.createElement(\"button\", {\n        type: \"button\",\n        key: index,\n        name: \"rating\",\n        className: index <= rating ? \"on\" : \"off\" // onClick={() => this.props.rateQuestion(id, index)}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"star\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"\\u2605\"));\n    })), React.createElement(\"div\", {\n      className: \"show-answer button\",\n      onClick: () => this.flipVisibility(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, this.state.visibleAnswer ? 'Hide' : 'Show', \" Answer\"), React.createElement(\"div\", {\n      className: \"answer-holder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        visibility: this.state.visibleAnswer ? 'visible' : 'hidden'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Answer: \", answer)));\n  }\n\n}\n\nexport default Question;","map":{"version":3,"sources":["C:\\development\\personal\\trivia\\frontend\\src\\components\\Question.js"],"names":["React","Component","starArray","Question","constructor","state","visibleAnswer","createStars","props","id","rating","map","num","changeRating","flipVisibility","setState","render","question","answer","category","difficulty","toLowerCase","questionAction","Array","star","index","visibility"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../stylesheets/Question.css';\n\nconst starArray = [5, 4, 3, 2, 1]\n\nclass Question extends Component {\n  constructor() {\n    super();\n    this.state = {\n      visibleAnswer: false,\n    };\n  }\n\n  createStars() {\n    let { id, rating } = this.props;\n\n    return (\n      <div className=\"rating\">\n        {starArray.map(num => (\n          <button\n            type=\"button\"\n            key={num}\n            name='rating'\n            className={`star ${rating >= num ? \"active\" : \"off\"}`}\n            onClick={() => { this.props.changeRating(id, num) }}\n          >\n            <span className=\"star\">&#9733;</span>\n          </button>\n        ))}\n      </div>\n    )\n  }\n\n  flipVisibility() {\n    this.setState({ visibleAnswer: !this.state.visibleAnswer });\n  }\n\n  render() {\n    const { question, answer, category, difficulty, rating, id } = this.props;\n    return (\n      <div className='Question-holder'>\n        <div className='Question'>{question}</div>\n        <div className='Question-status'>\n          <img\n            className='category'\n            alt={`${category.toLowerCase()}`}\n            src={`${category.toLowerCase()}.svg`}\n          />\n          <div className='difficulty'>Difficulty: {difficulty}</div>\n          <img\n            src='delete.png'\n            alt='delete'\n            className='delete'\n            onClick={() => this.props.questionAction('DELETE')}\n          />\n        </div>\n        {/* {this.createStars()} */}\n        <div className=\"rating\">\n          {[...Array(5)].map((star, index) => {\n            index += 1;\n            return (\n              <button\n                type=\"button\"\n                key={index}\n                name='rating'\n                className={index <= rating ? \"on\" : \"off\"}\n                // onClick={() => this.props.rateQuestion(id, index)}\n              >\n                <span className=\"star\">&#9733;</span>\n              </button>\n            );\n          })}\n        </div>\n        <div\n          className='show-answer button'\n          onClick={() => this.flipVisibility()}\n        >\n          {this.state.visibleAnswer ? 'Hide' : 'Show'} Answer\n        </div>\n        <div className='answer-holder'>\n          <span\n            style={{\n              visibility: this.state.visibleAnswer ? 'visible' : 'hidden',\n            }}\n          >\n            Answer: {answer}\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Question;\n"]},"metadata":{},"sourceType":"module"}